main: () -> i32 {
    // let x = 10.;
    let y = 5. * 2. == 10.;
    // printf("x: %\n", x);
    printf("y: %\n", y);

    // printf("10. - 5. == 5.\n");
    // assert(10. - 5. == 5.);
    // printf("x - y == 5.\n");
    // assert(x - y == 5.);
    // printf("x - 5. == 5.\n");
    // assert(x - 5. == 5.);
    // printf("10. - y == 5.\n");
    // assert(10. - y == 5.);

    // printf("\n");

    // let val = 600. / 8.;
    // printf("600. + 75. == 600. + val\n");
    // printf("val: %\n", val);
    // printf("rhs: %\n", 600. + 75.);
    // printf("lhs: %\n", 600. + val);
    // let lhs = 600. + 75.;
    // let rhs = 600. + val;
    // assert(lhs == rhs);
    // // TODO: this does not parse correctly
    // assert(600. + 75. == 600. + val);

    0
}

assert: (condition: bool) {
    // if !condition {
    //     printf("failed assert\n");
    //     exit(1);
    // }
}

#[intrinsic]
exit: (code: i32) {}

#[intrinsic]
printf: (fmt: &str) {}
